// Anonymous delegate with built-in delegate Func<>

static Func<string, string> displayMessageDelegate = delegate (string str)
    {
        return String.Format("Message: {0}", str);
    };
    
    // declared one
    
    static int Rectangle(int a, int b)
    {
        return a * b;
    }

    static int Square(int a, int b)
    {
        if (a == b)
            return a * b;
        else
            return 0;
    }
    
    private delegate int AreaCalculatorDelegate(int x, int y);
        
    static void Main(string[] args)
    {
        AreaCalculatorDelegate rect = Rectangle;
        AreaCalculatorDelegate sqre = Square;
        int j = rect(1, 2);
        int k = sqre(3, 3);
        Console.WriteLine("j = {0}", j);
        Console.WriteLine("k = {0}", k);  
    }
    
    // anonymous one
    
    private static Func<int, int, int> AreaRectangleDelegate = delegate (int a, int b)
    {
        return a * b;
    };
    
    private static Func<int, int, int> AreaSquareDelegate = delegate (int a, int b)
    {
        if (a == b)
            return a * b;
        else
            return 0;
    };
    
    static void Main(string[] args)
    {
        int j = AreaRectangleDelegate(1, 2);
        int k = AreaSquareDelegate(3, 3);
        Console.WriteLine("j = {0}", j);
        Console.WriteLine("k = {0}", k);
    }

 
